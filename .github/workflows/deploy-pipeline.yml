name: deploy-service
run-name: ${{ github.actor }} is deploying service
on: [push]

env:
  TF_API_TOKEN: "${{ secrets.TF_API_TOKEN }}"
  AWS_ACCESS_KEY_ID: "${{ secrets.S3_ACCESS_KEY_ID }}"
  AWS_SECRET_ACCESS_KEY: "${{ secrets.S3_SECRET_ACCESS_KEY }}"
  AWS_DEFAULT_REGION: "${{ vars.AWS_DEFAULT_REGION }}"

jobs:
  run-unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
      - run: npm run bootstrap:local
      - run: npm run test
  transpile-and-upload-data-validator:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Build dataValidator lambda
        run: |
          npm install --prefix ./functions/dataValidator
          npm run build --prefix ./functions/dataValidator
      
      - name: Install node_modules for dataValidator
        run: |
          npm run post-build --prefix ./functions/dataValidator

      - name: Archive data validator lambda
        run: |
          cd ./functions/dataValidator/dist/
          zip -r ../../../infrastructure/dataValidatorCode.zip ./

      - name: Upload archive to s3
        run: |
          cd infrastructure/
          aws s3 cp ./dataValidatorCode.zip s3://data-mapping-lambda-code
      - name: Test up dir
        run: |
          cd ../

      # - name: Trigger TFC run
      #   env:
      #     tfc_token: ${{ secrets.TF_API_TOKEN }}
      #   run: |
      #     curl --header "Authorization:Bearer $tfc_token" --header "Content-Type:application/vnd.api+json" --request POST --data @infrastructure/json_payload.json https://app.terraform.io/api/v2/runs
  transpile-and-upload-data-mapping:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Build dataMapping lambda
        run: |
          npm install --prefix ./functions/dataMapping
          npm run build --prefix ./functions/dataMapping
      
      - name: Install node_modules for dataMapping
        run: |
          npm run post-build --prefix ./functions/dataMapping

      - name: Archive data mapping lambda
        run: |
          cd ./functions/dataMapping/dist/
          zip -r ../../../infrastructure/dataMappingCode.zip ./

      - name: Upload archive to s3
        run: |
          cd infrastructure/
          aws s3 cp ./dataMappingCode.zip s3://data-mapping-lambda-code
      - name: Test up dir
        run: |
          cd ../

  deploy-service:
    needs: ['transpile-and-upload-data-validator', 'transpile-and-upload-data-mapping']
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Trigger TFC run
        env:
          tfc_token: ${{ secrets.TF_API_TOKEN }}
        run: |
          curl --header "Authorization:Bearer $tfc_token" --header "Content-Type:application/vnd.api+json" --request POST --data @infrastructure/json_payload.json https://app.terraform.io/api/v2/runs
